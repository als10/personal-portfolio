(self.webpackChunkalston_s_portfolio = self.webpackChunkalston_s_portfolio || []).push([[231], {
  7231() {
    !(function () {
      if (typeof window !== 'undefined') {
        const t = window.navigator.userAgent.match(/Edge\/(\d{2})\./); const e = t ? parseInt(t[1], 10) : null; const i = !!e && e >= 16 && e <= 18; if ('objectFit' in document.documentElement.style == 0 || i) {
          const n = function (t, e, i) { let n; let o; let l; let a; let d; if ((i = i.split(' ')).length < 2 && (i[1] = i[0]), t === 'x')n = i[0], o = i[1], l = 'left', a = 'right', d = e.clientWidth; else { if (t !== 'y') return; n = i[1], o = i[0], l = 'top', a = 'bottom', d = e.clientHeight; } if (n !== l && o !== l) { if (n !== a && o !== a) return n === 'center' || n === '50%' ? (e.style[l] = '50%', void (e.style[`margin-${l}`] = `${d / -2}px`)) : void (n.indexOf('%') >= 0 ? (n = parseInt(n, 10)) < 50 ? (e.style[l] = `${n}%`, e.style[`margin-${l}`] = `${d * (n / -100)}px`) : (n = 100 - n, e.style[a] = `${n}%`, e.style[`margin-${a}`] = `${d * (n / -100)}px`) : e.style[l] = n); e.style[a] = '0'; } else e.style[l] = '0'; }; const o = function (t) {
            let e = t.dataset ? t.dataset.objectFit : t.getAttribute('data-object-fit'); let i = t.dataset ? t.dataset.objectPosition : t.getAttribute('data-object-position'); e = e || 'cover', i = i || '50% 50%'; const o = t.parentNode; return (function (t) { const e = window.getComputedStyle(t, null); const i = e.getPropertyValue('position'); const n = e.getPropertyValue('overflow'); const o = e.getPropertyValue('display'); i && i !== 'static' || (t.style.position = 'relative'), n !== 'hidden' && (t.style.overflow = 'hidden'), o && o !== 'inline' || (t.style.display = 'block'), t.clientHeight === 0 && (t.style.height = '100%'), t.className.indexOf('object-fit-polyfill') === -1 && (t.className += ' object-fit-polyfill'); }(o)), (function (t) {
              const e = window.getComputedStyle(t, null); const i = {
                'max-width': 'none', 'max-height': 'none', 'min-width': '0px', 'min-height': '0px', top: 'auto', right: 'auto', bottom: 'auto', left: 'auto', 'margin-top': '0px', 'margin-right': '0px', 'margin-bottom': '0px', 'margin-left': '0px',
              }; for (const n in i)e.getPropertyValue(n) !== i[n] && (t.style[n] = i[n]);
            }(t)), t.style.position = 'absolute', t.style.width = 'auto', t.style.height = 'auto', e === 'scale-down' && (e = t.clientWidth < o.clientWidth && t.clientHeight < o.clientHeight ? 'none' : 'contain'), e === 'none' ? (n('x', t, i), void n('y', t, i)) : e === 'fill' ? (t.style.width = '100%', t.style.height = '100%', n('x', t, i), void n('y', t, i)) : (t.style.height = '100%', void (e === 'cover' && t.clientWidth > o.clientWidth || e === 'contain' && t.clientWidth < o.clientWidth ? (t.style.top = '0', t.style.marginTop = '0', n('x', t, i)) : (t.style.width = '100%', t.style.height = 'auto', t.style.left = '0', t.style.marginLeft = '0', n('y', t, i))));
          }; const l = function (t) { if (void 0 === t || t instanceof Event)t = document.querySelectorAll('[data-object-fit]'); else if (t && t.nodeName)t = [t]; else if (typeof t !== 'object' || !t.length || !t[0].nodeName) return !1; for (let e = 0; e < t.length; e++) if (t[e].nodeName) { const n = t[e].nodeName.toLowerCase(); if (n === 'img') { if (i) continue; t[e].complete ? o(t[e]) : t[e].addEventListener('load', (function () { o(this); })); } else n === 'video' ? t[e].readyState > 0 ? o(t[e]) : t[e].addEventListener('loadedmetadata', (function () { o(this); })) : o(t[e]); } return !0; }; document.readyState === 'loading' ? document.addEventListener('DOMContentLoaded', l) : l(), window.addEventListener('resize', l), window.objectFitPolyfill = l;
        } else window.objectFitPolyfill = function () { return !1; };
      }
    }());
  },
}]);
// # sourceMappingURL=231-bd60a4e6e6f74af95103.js.map
