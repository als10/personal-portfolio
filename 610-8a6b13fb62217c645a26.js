(self.webpackChunkalston_s_portfolio = self.webpackChunkalston_s_portfolio || []).push([[610], { 3610(n, e, t) { t.r(e), t.d(e, { createIntersectionObserver() { return i; } }); let r; const o = new WeakMap(); const c = navigator.connection || navigator.mozConnection || navigator.webkitConnection; function i(n) { return 'IntersectionObserver' in window ? (r || (r = new IntersectionObserver(((n) => { n.forEach(((n) => { let e; n.isIntersecting && ((e = o.get(n.target)) == null || e(), o.delete(n.target)); })); }), { rootMargin: (c == null ? void 0 : c.effectiveType) !== '4g' || c != null && c.saveData ? '2500px' : '1250px' })), function (e) { return e.current && (o.set(e.current, n), r.observe(e.current)), function () { r && e.current && (o.delete(e.current), r.unobserve(e.current)); }; }) : function () { return n(), function () {}; }; } } }]);
// # sourceMappingURL=610-8a6b13fb62217c645a26.js.map
